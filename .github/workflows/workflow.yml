name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
        django-version: [3.2, 4.0, 4.1]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Poetry virtual environment
        id: poetry-cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-v1-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-v1-
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | sh
      - name: Set poetry to use  virtualenvs.create true
        run: |
          poetry config virtualenvs.create true
      - name: Install dependencies
        run: |
          poetry install --with dev
      - name: Install Django
        run: |
          poetry add django==${{ matrix.django-version }}
      - name: Cache pre-commit hooks
        if: matrix.python-version == '3.10' && matrix.django-version == '4.1'
        id: pre-commit-cache
        uses: actions/cache@v2
        with:
          path: $HOME/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-hooks-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-hooks-
      - name: Run pre-commit
        if: matrix.python-version == '3.10'
        run: |
          poetry run pre-commit run --all-files
      - name: Run tests and coverage
        run: |
          poetry run coverage run --source=highlightjs manage.py test
      - name: Publish coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: coveralls
      - name: Publish package
        if: matrix.python-version == '3.10' && github.ref == 'refs/heads/main'
        run: |
          poetry publish --username=__token__ --password=${{ secrets.PYPI_SECRET }}
