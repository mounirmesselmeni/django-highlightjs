[tool.poetry]
name = "django-highlightjs"
version = "0.2.12"
description = "A Django app to easyily integrate highlight.js syntax highlighter."
authors = ["Mounir Messelmeni <messelmeni.mounir@gmail.com>"]
license = "mit"
readme = "README.rst"
packages = [{ include = "highlightjs" }]
exclude = ["highlightjs/tests.py", "highlightjs/testsettings.py"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
homepage = "https://github.com/mounirmesselmeni/django-highlightjs/"
repository = "https://github.com/mounirmesselmeni/django-highlightjs/"
keywords = [
  "django",
  "highlightjs",
  "syntax",
  "highlighter",
  "syntax highlighter",
  "highlight.js",
]

[tool.poetry.dependencies]
python = ">= 3.10"
Django = ">= 3"

[tool.poetry.group.dev.dependencies]
coverage = "~6"
coveralls = "~3"
black = "23.*"
isort = "5.*"
pre-commit = "3.*"
ruff = ">=0.0.252,<0.1.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 90
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
/(
  \.venv
  | migrations
  | \.cache
  | \.pre-commit-cache
)/
'''

[tool.isort]
profile = "black"
py_version = 311
multi_line_output = 3
line_length = 90
default_section = "THIRDPARTY"
skip = ["migrations", ".venv", ".pre-commit-cache"]

[tool.ruff]
# Docs: https://beta.ruff.rs/docs/
# Rules: https://beta.ruff.rs/docs/rules/
select = [
  "F",
  "E",
  "B",
  "C4",
  "EXE",
  "ISC",
  "ICN",
  "INP",
  "PIE",
  "SIM",
  "W",
  "T20",
  "UP",
  "T10",
  "G",
  "DJ001",
  "DJ008",
  "C90",
  "ERA",
]
# Later on might be useful C/C90 (Compexity), ERA (Found commented-out code), FBT
ignore = ["B008", "SIM102"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
  "F",
  "E",
  "B",
  "C4",
  "EXE",
  "ISC",
  "ICN",
  "INP",
  "PIE",
  "SIM",
  "W",
  "T20",
  "UP",
]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
  ".git",
  ".mypy_cache",
  ".pre-commit-cache",
  ".ruff_cache",
  ".tox",
  ".venv",
  "venv",
  "docs",
  "__pycache",
  "**/migrations/*",
]

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
